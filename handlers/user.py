from aiogram import Router, F
from aiogram.types import Message, WebAppInfo, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import CommandStart, Command
from database.db import create_user, get_user_by_telegram_id, get_orders_by_user
from config import WEB_APP_URL, ADMIN_IDS

router = Router()

def is_admin(user_id):
    return user_id in ADMIN_IDS

@router.message(CommandStart())
async def start_command(message: Message):
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await create_user(
        message.from_user.id,  # –≠—Ç–æ Telegram ID
        message.from_user.username,
        message.from_user.full_name
    )
    
    chat_id = message.chat.id
    user_id = message.from_user.id  # Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    print(f"User ID: {user_id}, Chat ID: {chat_id}")
    
    if message.text and "scan" in message.text:
        # QR code scanned
        keyboard = InlineKeyboardBuilder()
        keyboard.button(
            text="üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
            web_app=WebAppInfo(url=f"{WEB_APP_URL}/order?user_id={user_id}&chat_id={chat_id}")
        )
        await message.answer(
            f"üì¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–æ—á—Ç–æ–≤–æ–µ –ë—é—Ä–æ!\n\n"
            f"–í–∞—à Telegram ID: {user_id}\n"
            f"Chat ID: {chat_id}\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Web App.",
            reply_markup=keyboard.as_markup()
        )
    else:
        # Regular start
        keyboard = InlineKeyboardBuilder()
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        if is_admin(message.from_user.id):
            keyboard.button(
                text="üëë –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
                web_app=WebAppInfo(url=f"{WEB_APP_URL}/admin?user_id={user_id}&chat_id={chat_id}")
            )
        
        keyboard.button(
            text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å—Ç—Ä–µ—á—É",
            web_app=WebAppInfo(url=f"{WEB_APP_URL}/order?user_id={user_id}&chat_id={chat_id}")
        )
        keyboard.button(
            text="üì¨ –ú–æ–∏ –ø–∏—Å—å–º–∞",
            callback_data="my_letters"
        )
        await message.answer(
            f"üì¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–æ—á—Ç–æ–≤–æ–µ –ë—é—Ä–æ!\n\n"
            f"–í–∞—à Telegram ID: {user_id}\n"
            f"Chat ID: {chat_id}\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å—Ç—Ä–µ—á—É\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤",
            reply_markup=keyboard.as_markup()
        )

@router.callback_query(F.data == "my_letters")
async def my_letters(callback: CallbackQuery):
    user_telegram_id = callback.from_user.id
    print(f"–ó–∞–ø—Ä–æ—Å –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID: {user_telegram_id}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID
        orders = await get_orders_by_user(user_telegram_id)
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(orders) if orders else 0} –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_telegram_id}")
        
        if not orders or len(orders) == 0:
            await callback.message.edit_text("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            await callback.answer()
            return
        
        orders_text = "üì¨ –í–∞—à–∏ –ø–∏—Å—å–º–∞ –∏ –∑–∞–∫–∞–∑—ã:\n\n"
        for order in orders:
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–æ–∫
            total_cards = (order['card_type_1_count'] or 0) + \
                         (order['card_type_2_count'] or 0) + \
                         (order['card_type_3_count'] or 0)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–∞—Ö –æ—Ç–∫—Ä—ã—Ç–æ–∫
            card_types = []
            if order['card_type_1_count'] and order['card_type_1_count'] > 0:
                card_types.append(f"–∫—Ä–∞—Å–Ω—ã–µ: {order['card_type_1_count']}")
            if order['card_type_2_count'] and order['card_type_2_count'] > 0:
                card_types.append(f"—Å–∏–Ω–∏–µ: {order['card_type_2_count']}")
            if order['card_type_3_count'] and order['card_type_3_count'] > 0:
                card_types.append(f"–∑–µ–ª–µ–Ω—ã–µ: {order['card_type_3_count']}")
            
            card_info = ", ".join(card_types) if card_types else "–Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–∫"
            
            # –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            status_text = {
                'pending': '–æ–∂–∏–¥–∞–µ—Ç',
                'met': '–≤—Å—Ç—Ä–µ—á–∞ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å',
                'delivered': '–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
                'cancelled': '–æ—Ç–º–µ–Ω–µ–Ω–æ'
            }.get(order['status'], order['status'])
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
            created_date = order['created_at'][:10] if order['created_at'] else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            
            # –í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏
            time_info = ""
            if order['window_start'] and order['window_end']:
                time_info = f"\n   –í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏: {order['window_start']}-{order['window_end']}"
            
            orders_text += f"üì¶ –ó–∞–∫–∞–∑ #{order['id']}:\n"
            orders_text += f"   –û—Ç–∫—Ä—ã—Ç–∫–∏: {card_info}\n"
            orders_text += f"   –°—Ç–∞—Ç—É—Å: {status_text}{time_info}\n"
            orders_text += f"   –î–∞—Ç–∞: {created_date}\n\n"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = await get_user_by_telegram_id(user_telegram_id)
        if user:
            orders_text += f"–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {user['total_letters']}\n"
            orders_text += f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è A: {user['category_a_count']}\n"
            orders_text += f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è B: {user['category_b_count']}\n"
            orders_text += f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è C: {user['category_c_count']}\n\n"
            orders_text += f"–í–∞—à–∞ —Ä–æ–ª—å: {user['role_in_chat']}"
        
        await callback.message.edit_text(orders_text)
    except Exception as e:
        print(f"Error getting user orders: {e}")
        await callback.message.edit_text("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    await callback.answer()